<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:services="clr-namespace:TrainingDay.Services;assembly=TrainingDay"
             xmlns:viewModels="clr-namespace:TrainingDay.ViewModels;assembly=TrainingDay"
             xmlns:controls1="clr-namespace:TrainingDay.Views.Controls;assembly=TrainingDay"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
             xmlns:myToolTipSample="clr-namespace:myToolTipSample;assembly=TrainingDay"
             x:Class="TrainingDay.Views.TrainingItemsBasePage" Title="{services:Translate TrainingsBaseString}" IconImageSource="main.png" x:Name="Page">
    <ContentPage.BindingContext>
        <viewModels:TrainingItemsBasePageViewModel/>
    </ContentPage.BindingContext>
    <!--<ContentPage.ToolbarItems>
        <ToolbarItem IconImageSource="add.png" Command="{Binding AddNewTrainingCommand}" />
    </ContentPage.ToolbarItems>-->
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <StackLayout HeightRequest="50" WidthRequest="50" HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding State,Converter={StaticResource StateToVisibilityConverter},ConverterParameter={x:Static controls1:States.Loading}}">
                <ActivityIndicator IsRunning="True" Color="Black"/>
            </StackLayout>

            <StackLayout Orientation="Vertical" VerticalOptions="Center">
                <Label Text="{services:Translate NoTrainingsNeedAddNewString}" FontSize="20" HorizontalTextAlignment="Center" VerticalOptions="Start" HorizontalOptions="Center" 
                       IsVisible="{Binding State,Converter={StaticResource StateToVisibilityConverter},ConverterParameter={x:Static controls1:States.NoData}}"/>
            </StackLayout>

            <ListView ItemsSource="{Binding ItemsGrouped}" HorizontalOptions="FillAndExpand" x:Name="ItemsListView" HasUnevenRows="True" RowHeight="-1" BackgroundColor="Transparent" 
                      SeparatorVisibility="None" GroupDisplayBinding="{Binding Key}"  IsGroupingEnabled="True" 
                      IsVisible="{Binding State,Converter={StaticResource StateToVisibilityConverter},ConverterParameter={x:Static controls1:States.Normal}}"
                      ios:ListView.GroupHeaderStyle="Grouped">
                <ListView.GroupHeaderTemplate>
                    <DataTemplate>
                        <ViewCell Height="50">
                            <Frame Padding="5">
                                <StackLayout VerticalOptions="FillAndExpand" Padding="5" BackgroundColor="DarkGray" Orientation="Horizontal">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Source={x:Reference Page}, Path=BindingContext.ToggleExpandGroupCommand}"  NumberOfTapsRequired="1" CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                    <Label Text="{Binding Key}" TextColor="White" VerticalOptions="Center" FontSize="Medium"/>

                                    <Label HorizontalOptions="EndAndExpand" VerticalTextAlignment="Center" HorizontalTextAlignment="End" FontSize="Medium" Margin="0,0,10,0">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Expanded}" Value="True" TargetType="Label">
                                                        <Setter Property="Text" Value="-"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Expanded}" Value="False" TargetType="Label">
                                                        <Setter Property="Text" Value="+"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </StackLayout>
                            </Frame>
                        </ViewCell>
                    </DataTemplate>
                </ListView.GroupHeaderTemplate>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell x:Name="viewCell">
                            <ViewCell.ContextActions>
                                <MenuItem IsDestructive="true" IconImageSource="remove.png" Command="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.DeleteSelectedTrainingsCommand}" 
                                                  CommandParameter="{Binding Source={x:Reference viewCell}}" Text="Remove"/>
                                <MenuItem IsDestructive="true" Command="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.AddToGroupCommand}" 
                                          CommandParameter="{Binding Source={x:Reference viewCell}}" IconImageSource="union_add.png" Text="Group"/>
                                <MenuItem IsDestructive="true" Command="{Binding Source={x:Reference ItemsListView}, Path=BindingContext.DeleteFromGroupCommand}" 
                                                  CommandParameter="{Binding Source={x:Reference viewCell}}" IconImageSource="union_del.png" Text="Ungroup"/>

                            </ViewCell.ContextActions>
                            <Frame Style="{StaticResource FrameCellStyle}" Padding="20">
                                <Label Text="{Binding Title}" VerticalTextAlignment="Center" FontSize="Medium" FontAttributes="Bold" VerticalOptions="Center" HorizontalTextAlignment="Center"/>
                            </Frame>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.Behaviors>
                    <services:EventToCommandBehavior EventName="ItemSelected" Command="{Binding ItemSelectedCommand}" />
                </ListView.Behaviors>
            </ListView>

            <controls1:AdMobView VerticalOptions="End" BackgroundColor="Transparent" Grid.Row="2" x:Name="AdMobView">
                <controls1:AdMobView.AdUnitId>
                    <OnPlatform x:TypeArguments="x:String">
                        <On Platform="iOS" Value="ca-app-pub-8728883017081055/4777741279" />
                        <On Platform="Android" Value="ca-app-pub-8728883017081055/2677919170" />
                    </OnPlatform>
                </controls1:AdMobView.AdUnitId>
            </controls1:AdMobView>

            <Image Source="add.png" HorizontalOptions="Center" VerticalOptions="End" HeightRequest="60" WidthRequest="60" x:Name="AddImage" Grid.Row="1"
                   
                   
                   myToolTipSample:ToolTipEffect.BackgroundColor="Silver"
                   myToolTipSample:ToolTipEffect.IsTapAttached="True"
                   myToolTipSample:ToolTipEffect.Margin="10"
                   myToolTipSample:ToolTipEffect.Position="Top"
                   myToolTipSample:ToolTipEffect.Text="This button to add new Training Item"
                   myToolTipSample:ToolTipEffect.TextColor="Teal">
                <Image.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding AddNewTrainingCommand}"/>
                </Image.GestureRecognizers>
            </Image>
        </Grid>
    </ContentPage.Content>
</ContentPage>